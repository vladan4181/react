{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","maxLength15","maxLength","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","MyPosts","posts","profilePage","map","id","reverse","values","addPost","MyPostsContainer","this","React","Component","compose","connect","state","AddPost","ProfileStatus","useState","editMode","setEditMode","status","statusText","setStatusText","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","target","value","ProfileInfo","profile","photos","large","profileAvatar","Preloader","Profile","updateUserStatus","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfileInfo","getUserStatus","auth","withRouter"],"mappings":"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","file":"static/js/4.9f9ff6ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileInfo_profileAvatar__1DNIM\"};","import React from 'react';\nimport s from './Post.module.css';\nfunction Post(props) {\n  return (<div>\n    <div className={s.item}><img src=\"https://lh6.googleusercontent.com/-222iVw4-5Jw/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckD_hhm8jPjdH61DkEIuAmF-FRMxA/s88-c-k-c0x00ffffff-no-rj-mo/photo.jpg\" alt=\"\"/> {props.message}\n    </div>\n  </div>);\n}\nexport default Post;","import React from 'react';\nimport './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../../utils/formControls\";\n\nconst maxLength15 = maxLength(15);\nconst MyPostsForm = (props) => {\n    return (<form onSubmit={props.handleSubmit}>\n        <Field component={Textarea} name={'message'} placeholder={'Введите сообщение'}\n               validate={[required, maxLength15]}/>\n        <button type={'submit'}>Add post</button>\n    </form>);\n}\n\nconst MyPostsReduxForm = reduxForm({\n    form: 'myPosts'\n})(MyPostsForm)\n\n\nfunction MyPosts(props) {\n    let posts = [...props.profilePage.posts].map((item) => {\n        return <Post key={item.id} id={item.id} message={item.message}/>\n    }).reverse();\n    const submit = (values) => {\n        let {message} = values;\n        props.addPost(message);\n\n    }\n    return (<div>\n        <div><MyPostsReduxForm onSubmit={submit}/></div>\n        <div className=\"posts\">{posts}</div>\n    </div>);\n}\n\n\nexport default MyPosts;","import React from 'react';\nimport MyPosts from './MyPosts';\nimport {AddPost} from '../../../redux/profile-reducer';\nimport {connect} from 'react-redux';\nimport {compose} from \"redux\";\n\nclass MyPostsContainer extends React.Component {\n    render() {\n        return <MyPosts {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {profilePage: state.profilePage}\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {addPost: AddPost})\n)(MyPostsContainer);","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [statusText, setStatusText] = useState(props.status)\n\n    useEffect(() => {\n        setStatusText(props.status)\n    }, [props.status]);\n\n    const enableEditMode = () => {\n        setEditMode(true)\n    }\n\n    const disableEditMode = () => {\n        setEditMode(false)\n    }\n\n    const onBlur = () => {\n        disableEditMode();\n        props.updateStatus(statusText);\n    }\n\n    const onChangeStatus = (event) => {\n        setStatusText(event.target.value)\n    }\n\n    return (<div className={'status'}>\n        {!editMode && <div\n            onDoubleClick={enableEditMode}>{props.status !== null && props.status !== '' ? props.status : 'Статус не задан'}</div>}\n\n        {editMode &&\n        <div><input autoFocus={true} type=\"text\" onBlur={onBlur} onChange={onChangeStatus}\n                    value={statusText}/></div>}\n\n    </div>);\n\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatusWithHooks\";\nfunction ProfileInfo({profile, status, updateStatus}) {\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  return (<div>\n    <img src={profile.photos.large ? profile.photos.large : ''} alt=\"\" className={s.profileAvatar}/>\n    <ProfileStatus status={status} updateStatus={updateStatus}/>\n  </div>);\n}\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nfunction Profile({profile, status, updateUserStatus}) {\n    return (<div className=\"content\">\n        <ProfileInfo profile={profile} status={status} updateStatus={updateUserStatus}/>\n        <MyPostsContainer/>\n    </div>);\n}\n\nexport default Profile;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {\n    getProfileInfo,\n    getUserStatus,\n    updateUserStatus\n} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) userId = this.props.authorizedUserId;\n        if (!userId) this.props.history.push('/login');\n        this.props.getProfileInfo(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    render() {\n        return <Profile {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId : state.auth.userId\n    }\n}\n// connect > withRouter > withAuthContainer > ProfileContainer\nexport default compose(\n    connect(mapStateToProps, {getProfileInfo, getUserStatus, updateUserStatus}),\n    withRouter,\n)(ProfileContainer);\n"],"sourceRoot":""}