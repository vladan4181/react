{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthComponent.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","name","Message","message","maxLength100","maxLength","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","type","Dialogs","dialogsElements","dialogsPage","dialogs","map","item","id","messagesElements","messages","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","state","isAuth","auth","withAuthContainer","Component","connect","DialogsContainer","this","React","compose"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAgB,+BAA+B,SAAW,4B,oBCA/GD,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,sJCSbC,MAPf,SAAoBC,GAClB,OAAQ,8BACN,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAAMC,GAAG,YAAT,SAAsBJ,EAAMK,Y,OCCnBC,MALf,SAAiBN,GACf,OAAQ,8BACN,qBAAKC,UAAU,UAAf,SAA0BD,EAAMO,a,kCCG9BC,EAAeC,YAAU,KAUzBC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EATL,SAACX,GAEjB,OAAQ,uBAAMa,SAAUb,EAAMc,aAAtB,UACJ,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,UAAWa,YAAa,oGACnDC,SAAU,CAACC,IAAUZ,KAC5B,wBAAQa,KAAM,SAAd,+BAuCOC,MA9Bf,SAAiBtB,GAEb,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QAAQC,KAAI,SAACC,GACjD,OAAO,cAAC,EAAD,CAA4BC,GAAID,EAAKC,GAAIvB,KAAMsB,EAAKtB,MAAnCsB,EAAKtB,SAE7BwB,EAAmB7B,EAAMwB,YAAYM,SAASJ,KAAI,SAACC,GACnD,OAAO,cAAC,EAAD,CAAuBC,GAAID,EAAKC,GAAIrB,QAASoB,EAAKpB,SAApCoB,EAAKC,OAS9B,OAAQ,8BACJ,sBAAK3B,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE6B,aAAlB,SACKR,IAEL,sBAAKtB,UAAWC,IAAE4B,SAAlB,UACI,8BAAMD,IACN,8BACI,cAACnB,EAAD,CAAkBG,SAdnB,SAACmB,GAAY,IACnBzB,EAAWyB,EAAXzB,QACLP,EAAMiC,YAAY1B,iB,yBC7BpB2B,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAgBZE,EAXS,SAACC,GAQrB,OAFmCC,YAAQN,EAARM,EALT,SAACxC,GACvB,OAAKA,EAAMoC,OACJ,cAACG,EAAD,eAAevC,IADI,cAAC,IAAD,CAAUI,GAAI,e,QCL1CqC,E,uKAEE,OAAO,cAAC,EAAD,eAAaC,KAAK1C,Y,GAFF2C,IAAMJ,WAYtBK,sBACXJ,aAPoB,SAACL,GACrB,MAAO,CACHX,YAAaW,EAAMX,eAKE,CAACS,kBAC1BK,EAFWM,CAGbH","file":"static/js/3.f2372921.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs-items\":\"Dialogs_dialogs-items__11igu\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport s from './DialogItem.module.css';\nfunction DialogItem(props) {\n  return (<div>\n    <div className={s.dialog}>\n      <Link to=\"/dialogs/\">{props.name}</Link>\n    </div>\n  </div>);\n}\nexport default DialogItem;","import React from 'react';\nimport './Message.module.css';\nfunction Message(props) {\n  return (<div>\n    <div className=\"message\">{props.message}</div>\n  </div>);\n}\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../utils/formControls\";\nimport {maxLength, required} from \"../../utils/validators\";\nconst maxLength100 = maxLength(100);\nconst DialogsForm = (props) => {\n\n    return (<form onSubmit={props.handleSubmit}>\n        <Field component={Textarea} name={'message'} placeholder={'Введите сообщение'}\n               validate={[required, maxLength100]}/>\n        <button type={'submit'}>Add message</button>\n    </form>);\n}\n\nconst DialogsReduxForm = reduxForm({\n    form: 'dialogs'\n})(DialogsForm)\n\n\nfunction Dialogs(props) {\n\n    let dialogsElements = props.dialogsPage.dialogs.map((item) => {\n        return <DialogItem key={item.name} id={item.id} name={item.name}/>\n    });\n    let messagesElements = props.dialogsPage.messages.map((item) => {\n        return <Message key={item.id} id={item.id} message={item.message}/>\n    });\n\n    const submit = (values) => {\n        let {message} = values;\n        props.sendMessage(message);\n\n    }\n\n    return (<div>\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <div>\n                    <DialogsReduxForm onSubmit={submit}/>\n                </div>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\n\nlet withAuthContainer = (Component) => {\n    const RedirectComponent = (props) => {\n        if (!props.isAuth) return <Redirect to={'/login'}/>\n        return <Component {...props} />\n    }\n\n    let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return connectAuthRedirectComponent\n}\n\nexport default withAuthContainer;\n\n\n\n\n\n\n\n","import React from 'react';\nimport Dialogs from './Dialogs';\nimport {sendMessage} from '../../redux/dialogs-reducer';\nimport {connect} from 'react-redux';\nimport withAuthContainer from \"../hoc/withAuthComponent\";\nimport {compose} from \"redux\";\n\n\nclass DialogsContainer extends React.Component {\n    render() {\n        return <Dialogs {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {sendMessage}),\n    withAuthContainer\n)(DialogsContainer);"],"sourceRoot":""}